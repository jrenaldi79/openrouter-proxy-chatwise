name: Test and Deploy

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Local tests that run in CI environment
  local-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run local tests (excludes production tests)
      run: npm test

    - name: Generate test coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  # Build and deploy to Google Cloud Run
  deploy:
    needs: local-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy openrouter-proxy \
          --source . \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars OPENROUTER_BASE_URL=https://openrouter.ai,NODE_ENV=production \
          --memory 512Mi \
          --timeout 300

  # Production tests that run against deployed service
  production-tests:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Wait for deployment to be ready
      run: sleep 30

    - name: Run production validation tests
      env:
        OPENROUTER_TEST_API_KEY: ${{ secrets.OPENROUTER_TEST_API_KEY }}
        SERVICE_URL: ${{ secrets.PRODUCTION_SERVICE_URL }}
      run: |
        echo "üöÄ Running production validation tests..."
        npm run test:production

    - name: Run Jest production tests
      env:
        OPENROUTER_TEST_API_KEY: ${{ secrets.OPENROUTER_TEST_API_KEY }}
        SERVICE_URL: ${{ secrets.PRODUCTION_SERVICE_URL }}
      run: |
        echo "üß™ Running Jest production test suite..."
        npm run test:production:jest

    - name: Production test results
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "‚úÖ All production tests passed! Service is ready for ChatWise integration."
        else
          echo "‚ùå Production tests failed. Service may not be ready for production use."
          exit 1
        fi